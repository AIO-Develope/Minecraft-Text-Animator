# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from email.generator import Generator
from PyQt5 import QtCore, QtGui, QtWidgets
import os


class Ui_Main(object):
    def setupUi(self, Main):
        Main.setObjectName("Main")
        Main.resize(539, 573)
        self.gridLayout_2 = QtWidgets.QGridLayout(Main)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.tabWidget = QtWidgets.QTabWidget(Main)
        self.tabWidget.setObjectName("tabWidget")
        self.Blink = QtWidgets.QWidget()
        self.Blink.setObjectName("Blink")
        self.tabWidget.addTab(self.Blink, "")
        self.Wave = QtWidgets.QWidget()
        self.Wave.setObjectName("Wave")
        self.gridLayout = QtWidgets.QGridLayout(self.Wave)
        self.gridLayout.setObjectName("gridLayout")
        self.Generate = QtWidgets.QPushButton(self.Wave)
        self.Generate.setObjectName("Generate")
        self.gridLayout.addWidget(self.Generate, 2, 0, 1, 2)
        self.Color_g = QtWidgets.QGroupBox(self.Wave)
        self.Color_g.setObjectName("Color_g")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.Color_g)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.Red_r = QtWidgets.QRadioButton(self.Color_g)
        self.Red_r.setObjectName("Red_r")
        self.verticalLayout_3.addWidget(self.Red_r)
        self.Blue_r = QtWidgets.QRadioButton(self.Color_g)
        self.Blue_r.setObjectName("Blue_r")
        self.verticalLayout_3.addWidget(self.Blue_r)
        self.gridLayout.addWidget(self.Color_g, 1, 0, 1, 1)
        self.Text_g = QtWidgets.QGroupBox(self.Wave)
        self.Text_g.setObjectName("Text_g")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.Text_g)
        self.verticalLayout.setObjectName("verticalLayout")
        self.Text = QtWidgets.QLineEdit(self.Text_g)
        self.Text.setObjectName("Text")
        self.verticalLayout.addWidget(self.Text)
        self.gridLayout.addWidget(self.Text_g, 0, 0, 1, 2)
        self.PluginFormatted_g = QtWidgets.QGroupBox(self.Wave)
        self.PluginFormatted_g.setObjectName("PluginFormatted_g")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.PluginFormatted_g)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.Non_Formatted_r = QtWidgets.QRadioButton(self.PluginFormatted_g)
        self.Non_Formatted_r.setObjectName("Non_Formatted_r")
        self.verticalLayout_2.addWidget(self.Non_Formatted_r)
        self.Tab_r = QtWidgets.QRadioButton(self.PluginFormatted_g)
        self.Tab_r.setObjectName("Tab_r")
        self.verticalLayout_2.addWidget(self.Tab_r)
        self.AnimatedScoreboard_r = QtWidgets.QRadioButton(
            self.PluginFormatted_g)
        self.AnimatedScoreboard_r.setObjectName("AnimatedScoreboard_r")
        self.verticalLayout_2.addWidget(self.AnimatedScoreboard_r)
        self.Scoreboard_r = QtWidgets.QRadioButton(self.PluginFormatted_g)
        self.Scoreboard_r.setObjectName("Scoreboard_r")
        self.verticalLayout_2.addWidget(self.Scoreboard_r)
        self.gridLayout.addWidget(self.PluginFormatted_g, 1, 1, 1, 1)
        self.Export = QtWidgets.QTextEdit(self.Wave)
        self.Export.setReadOnly(True)
        self.Export.setObjectName("Export")
        self.gridLayout.addWidget(self.Export, 3, 0, 1, 2)
        self.tabWidget.addTab(self.Wave, "")
        self.gridLayout_2.addWidget(self.tabWidget, 0, 0, 1, 1)

        self.retranslateUi(Main)
        self.tabWidget.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(Main)



       

# --start-- custome code

        def generate_script():
            
            u_text = self.Text.text()
            
            # --start-- color

            if self.Red_r.isChecked():
                color = "&c"

            if self.Blue_r.isChecked():
                color = "&9"

            # --stop-- color

            # --start-- Format
            
            if self.Non_Formatted_r.isChecked():
                format_sufix = ""
                format_prefix = ""

            if self.Tab_r.isChecked():
                format_sufix = "'"
                format_prefix = "        - '"
            
            if self.AnimatedScoreboard_r.isChecked():
                format_sufix = "'"
                format_prefix = "  - '"


            if self.Scoreboard_r.isChecked():
                format_sufix = "'"
                format_prefix = "  - '"

            # --stop-- Format

            # --start-- text verarbeitung

            def split(u_text):
                return [char for char in u_text]

            c_text = len(u_text)
            s_text = split(u_text)

            for i in range(c_text + 1):
                s_text.insert(i, color)
                s_text.insert(i + 2, '&r')

                f = open("output.txt", "a")
                f.write(format_prefix + "".join(s_text) + format_sufix + "\n")
                f.close()

                try:

                    del s_text[i + 2]
                    del s_text[i]
                except:
                    pass
                # --stop-- text verarbeitung

            # --start-- export

            f = open('output.txt', 'r+')
            ft = f.read()
            self.Export.setPlainText(ft)
            f.close()

            os.remove("output.txt")

            # --stop-- export

        # --stop-- scripts

        # --start-- events connect ui

        self.Generate.clicked.connect(generate_script)

        # --stop-- events connect ui

# --stop-- custome code


    def retranslateUi(self, Main):
        _translate = QtCore.QCoreApplication.translate
        Main.setWindowTitle(_translate("Main", "Minecraft Text Animator"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(
            self.Blink), _translate("Main", "Blink"))
        self.Generate.setText(_translate("Main", "Generate"))
        self.Color_g.setTitle(_translate("Main", "Color"))
        self.Red_r.setText(_translate("Main", "Red"))
        self.Blue_r.setText(_translate("Main", "Blue"))
        self.Text_g.setTitle(_translate("Main", "Text"))
        self.PluginFormatted_g.setTitle(_translate("Main", "Plugin Formated"))
        self.Non_Formatted_r.setText(_translate("Main", "Non Formated"))
        self.Tab_r.setText(_translate("Main", "Tab"))
        self.AnimatedScoreboard_r.setText(
            _translate("Main", "AnimatedScoreboard"))
        self.Scoreboard_r.setText(_translate("Main", "Scoreboard R4"))
        self.Export.setHtml(_translate("Main", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                       "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                       "p, li { white-space: pre-wrap; }\n"
                                       "</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
                                       "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(
            self.Wave), _translate("Main", "Wave"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Main = QtWidgets.QWidget()
    ui = Ui_Main()
    ui.setupUi(Main)
    Main.show()
    sys.exit(app.exec_())
